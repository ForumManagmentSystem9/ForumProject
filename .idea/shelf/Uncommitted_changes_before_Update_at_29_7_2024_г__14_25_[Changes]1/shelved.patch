Index: demo/src/main/java/com/example/demo/controllers/AuthenticationController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.demo.controllers;\r\n\r\nimport com.example.demo.helpers.UserLoginMapper;\r\nimport com.example.demo.helpers.UserMapper;\r\nimport com.example.demo.models.userfolder.User;\r\nimport com.example.demo.response.AuthenticationResponse;\r\nimport com.example.demo.services.AuthenticationService;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.PostMapping;\r\nimport org.springframework.web.bind.annotation.RequestBody;\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\n@RestController\r\npublic class AuthenticationController {\r\n    private final AuthenticationService authService;\r\n    private final UserMapper userMapper;\r\n    private final UserLoginMapper userLoginMapper;\r\n\r\n    @Autowired\r\n    public AuthenticationController(AuthenticationService authService, UserMapper userMapper, UserLoginMapper userLoginMapper) {\r\n        this.authService = authService;\r\n        this.userMapper = userMapper;\r\n        this.userLoginMapper = userLoginMapper;\r\n    }\r\n\r\n    @PostMapping(\"/register\")\r\n    public ResponseEntity<AuthenticationResponse> register(\r\n            @RequestBody User request\r\n    ) {\r\n//        User user = userMapper.fromDto(request);\r\n        return ResponseEntity.ok(authService.registerUser(request));\r\n    }\r\n\r\n    @PostMapping(\"/login\")\r\n    public ResponseEntity<AuthenticationResponse> login(\r\n            @RequestBody User request\r\n    ) {\r\n//        User user = userLoginMapper.fromDto(request);\r\n        return ResponseEntity.ok(authService.authenticate(request));\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/demo/src/main/java/com/example/demo/controllers/AuthenticationController.java b/demo/src/main/java/com/example/demo/controllers/AuthenticationController.java
--- a/demo/src/main/java/com/example/demo/controllers/AuthenticationController.java	
+++ b/demo/src/main/java/com/example/demo/controllers/AuthenticationController.java	
@@ -3,6 +3,7 @@
 import com.example.demo.helpers.UserLoginMapper;
 import com.example.demo.helpers.UserMapper;
 import com.example.demo.models.userfolder.User;
+import com.example.demo.models.userfolder.UserDTO;
 import com.example.demo.response.AuthenticationResponse;
 import com.example.demo.services.AuthenticationService;
 import jakarta.servlet.http.HttpServletRequest;
@@ -28,17 +29,17 @@
 
     @PostMapping("/register")
     public ResponseEntity<AuthenticationResponse> register(
-            @RequestBody User request
+            @RequestBody UserDTO request
     ) {
-//        User user = userMapper.fromDto(request);
-        return ResponseEntity.ok(authService.registerUser(request));
+        User user = userMapper.fromDto(request);
+        return ResponseEntity.ok(authService.registerUser(user));
     }
 
     @PostMapping("/login")
     public ResponseEntity<AuthenticationResponse> login(
-            @RequestBody User request
+            @RequestBody UserDTO request
     ) {
-//        User user = userLoginMapper.fromDto(request);
-        return ResponseEntity.ok(authService.authenticate(request));
+        User user = userMapper.fromDto(request);
+        return ResponseEntity.ok(authService.authenticate(user));
     }
 }
